
CODE_16 	SEGMENT                          

	push	ds
	pop	es

        lea dx, [video_ask]
	mov	ah, 09
	int	21h
	xor	ax, ax
        int     16h
        ;al=mode select number
        sub al, '0'
        cmp al, 2
        ja @stupiduser
        mov vmode, al
        jnz @setvesa
            mov ax, 013h
            int 010h
            mov dx, 03c8h
            xor al, al
            out dx, al
            inc dx
            mov cx, 255
            @grayloop:
                mov al, cl
                not al
                shr al, 2
                out dx, al
                out dx, al
                out dx, al
            dec cx
            jns @grayloop
        jmp @modesetanddone
        @setvesa:

	;set vesa mode
	;get a buffer... i just hope that there is free space after 4f00h

	mov 	ax, 04f00h 	;Super VGA information block to es:di
       	mov 	di, ax 		;just use buffer es:04f00h
       	int 	10h

       	cmp 	al, 04fh         
        je      @vesaok

@vesaerror:
	lea	dx, vbe_err
	mov	ah, 09
	int	21h
@stupiduser:
       .exit
       
vbe_err   db      0, "error: vesa failure.$"
video_ask db      13,10,"Video? [0=320x240x32b, 1=640x480x32b, 2=320x200xMono]$" 

@vesaok:
       	mov	si, [di+14] 	;pointer to vesa modes list
       	mov 	fs, [di+16]
	add 	di, 256
@nextmode:
        mov	cx, fs:[si]
	lodsw
	inc 	cx
	jz 	@vesaerror 	;end of mode list
	dec 	cx

        ;set mode cx, and check wether it is 320*240*32bit

        mov 	ax, 4f01h 	;es:di still points to our buffer
        int 	10h

        cmp vmode, 1
        je @hires1
        cmp     dword ptr [di+18], 00f00140h
        jne     @nextmode
        jmp @getdepth

        @hires1:
        cmp     dword ptr [di+18], 01e00280h
        jne     @nextmode

        @getdepth:
        cmp 	byte ptr [di+25], 32
        jne 	@nextmode

	;found our mode! cool! let's set it.
	mov 	ax, 04f02h
	xchg 	bx, cx
        int 	10h

        @modesetanddone:

	;mode set & done

CODE_16		ENDS


